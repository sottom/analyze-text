var CompiledXmlTag;

CompiledXmlTag = CompiledXmlTag = (function() {
  function CompiledXmlTag(compiled) {
    if (compiled == null) {
      compiled = [];
    }
    this.set(compiled);
  }

  CompiledXmlTag.prototype.set = function(compiled) {
    var text, _i, _len, _results;
    if (compiled == null) {
      compiled = [];
    }
    if (this["null"]) {
      return this;
    }
    this.compiled = [];
    _results = [];
    for (_i = 0, _len = compiled.length; _i < _len; _i++) {
      text = compiled[_i];
      if (text !== '') {
        _results.push(this.compiled.push(text));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  CompiledXmlTag.prototype.prependText = function(text) {
    if (this["null"]) {
      return this;
    }
    if (text !== '') {
      this.compiled.unshift(text);
    }
    return this;
  };

  CompiledXmlTag.prototype.appendText = function(text) {
    if (this["null"]) {
      return this;
    }
    if (text !== '') {
      this.compiled.push(text);
    }
    return this;
  };

  return CompiledXmlTag;

})();

CompiledXmlTag["null"] = function() {
  var obj;
  obj = new CompiledXmlTag();
  obj["null"] = true;
  return obj;
};

module.exports = CompiledXmlTag;
